pcall( function()    
local Arrow = game.Workspace.Items["Stand Arrow"].Handle
local SpawnLocation = Vector3.new(-541.32, 96.2586, -3307.86)

if (Arrow.Position - SpawnLocation).Magnitude <= 3 then
  Arrow.Parent:Destroy()
end

for i,v in pairs(game.Workspace.Living:GetDescendants()) do
    if v:IsA("BindableEvent") and v.Name == "Ragdoll" then
        v:Destroy()
        end
    end
end)

local Name = game:GetService("Players").LocalPlayer.Name
local Player = game:GetService("Players").LocalPlayer
local TempData = {
            ["WalkSpeed"] = 100,
            ["JumpPower"] = 100
}
TempData.AutofarmSettings = {
    ["Distance"] = 5,
    ["Auto Spawn Stand"] = true,
    ["UsedMoves"] = {},
    ["NPC_Table"] = {},
    ["Item_Table"] = {},
    ["SelectedNPC"] = nil,
    ["SelectedItem"] = nil,
    ["Farming"] = false,
    ["FixThread"] = nil,
}
TempData.Completed = false;
TempData.UpdateList = function()
    TempData.AutofarmSettings["NPC_Table"] = {} --//clear the table

    for i,v in pairs(workspace.Living:GetChildren()) do
        if not table.find(TempData.AutofarmSettings["NPC_Table"], v.Name) then
            table.insert(TempData.AutofarmSettings["NPC_Table"], v.Name)
        end
    end
end
TempData.Kill = function(npc)
	assert(npc, "No NPC provided")

	if not TempData.Target then
		TempData.Target = npc
	end

	TempData.AutofarmThread = game:GetService("RunService").RenderStepped:Connect(function()
		if TempData.Target:FindFirstChild("HumanoidRootPart") and (TempData.Target:FindFirstChild("Humanoid") and TempData.Target:FindFirstChild("Humanoid").Health > 0.11) and not TempData.Completed and TempData.Farming then
			Player.Character.PrimaryPart.CFrame = (TempData.Target:FindFirstChild("HumanoidRootPart").CFrame - TempData.Target:FindFirstChild("HumanoidRootPart").CFrame.lookVector * TempData.AutofarmSettings.Distance)

            if game.Players.LocalPlayer.Character and not game.Players.LocalPlayer.Character:FindFirstChild("Stand") and TempData.AutofarmSettings["Auto Spawn Stand"] then
                game.Players.LocalPlayer.Character.StandEvents.Summon:FireServer()
            end

			coroutine.resume(coroutine.create(function()
				TempData.Moves["All"]()
			end))

		else

			TempData.Stop()
		end
	end)
end

TempData.Stop = function()
	if TempData.AutofarmThread then
		TempData.AutofarmThread:Disconnect();
		TempData.Target = nil
		TempData.Completed = true
		TempData.AutofarmSettings.FixThread:Disconnect();
	end
end

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

local Window = Library.CreateLib("SUR by Vez#9707 - https://discord.gg/SzTRYkBu8u", colors)
local Tab = Window:NewTab("main")
local Tab3 = Window:NewTab("other")
local Tab2 = Window:NewTab("misc")

local Section = Tab:NewSection("Main")
local Section3 = Tab3:NewSection("NPCs")
local Section2 = Tab3:NewSection("Use Items")
local Section4 = Tab2:NewSection("player spy")

-- spoof ws
local Old;
  Old = hookmetamethod(game, "__index", function(self, key)
    if key == "WalkSpeed" and self == game.Players.LocalPlayer.Character.Humanoid then
      return 16
    end
    return Old(self, key)
end)

Section:NewSlider("WalkSpeed", "walk", 300, 16, function(WS)
    TempData["WalkSpeed"] = WS
end)

Section:NewToggle("Enable WalkSpeed", "walk", function(WS2)
    if WS2 then
       someloop = game:GetService("RunService").RenderStepped:Connect(function()
           if Player.Character and Player.Character:FindFirstChild("Humanoid") then
              Player.Character.Humanoid.WalkSpeed = TempData["WalkSpeed"]
           end
       end)
    else
       Player.Character.Humanoid.WalkSpeed = 16
       someloop:Disconnect()
    end
end)

Section:NewSlider("JumpPower", "jump", 150, 10, function(JP2)
    TempData["JumpPower"] = JP2
end)
Section:NewToggle("Enable JumpPower", "jumpy", function(JP)
    if JP then
       someloop = game:GetService("RunService").RenderStepped:Connect(function()
           if Player.Character and Player.Character:FindFirstChild("Humanoid") then
              Player.Character.Humanoid.JumpPower = TempData["JumpPower"]
           end
       end)
    else
       Player.Character.Humanoid.JumpPower = 50
       someloop:Disconnect()
    end
end)

Section:NewButton("Invisibility", "turn invis", function()
    local Player = game.Players.LocalPlayer
        Player.Character.LowerTorso:Destroy()
    Player.Character.UpperTorso.CFrame = CFrame.new(-217.5761260986328, 67.0986099243164, -270.5904235839844)
end)

Section:NewButton("Reset", "Reset your Character", function()
    game.Players.LocalPlayer.Character.Humanoid.Health = 0
end)

Section:NewButton("Info (check f9 when pressed)", "Information in F9", function()
    print("_____________________\n-Do not use Invisibility with Item Farm.\n-Made by Vez#9707, please suggest features.\nIf itemfarm stops working do not worry, that just means there are no items spawned at the current moment.\n________________________")
end)

--[[section2:addButton("Godmode (Permanent)", function(perm)
    if perm then
        game.Players.LocalPlayer.Character.Humanoid:Remove()
	    Instance.new('Humanoid', game.Players.LocalPlayer.Character)
	    game:GetService("Workspace")[game.Players.LocalPlayer.Name]:FindFirstChildOfClass('Humanoid').HipHeight = 2
    end
end)]]

--[[section3:addSlider("Distance from NPC", 4, 1, 4, function(new)
	TempData.AutofarmSettings.Distance = new
end)]]
for i,v in pairs(workspace.Living:GetChildren()) do
    table.insert(TempData.AutofarmSettings["NPC_Table"], v.Name)
end

local NPCSelection = Section3:NewDropdown("NPC & Player Selection", "Hello", TempData.AutofarmSettings["NPC_Table"], function(selected)
    TempData.AutofarmSettings.SelectedNPC = selected
end)

workspace.Living.ChildAdded:Connect(function()
    TempData.UpdateList()
    NPCSelection:Refresh(TempData.AutofarmSettings["NPC_Table"])
end)

workspace.Living.ChildRemoved:Connect(function()
    TempData.UpdateList()
    NPCSelection:Refresh(TempData.AutofarmSettings["NPC_Table"])
end)

--[[local Loop = nil
Section3:NewToggle("Attach Stand To Player", "the title the title", function(NewState)
    if NewState == true then
        local NPC = workspace.Living:FindFirstChild(TempData.AutofarmSettings.SelectedNPC)
        local Character = Player.Character
        if not NPC or not Character then return end
        
        Loop = game:GetService("RunService").RenderStepped:Connect(function()
            game.Players.LocalPlayer.Character.Stand.PrimaryPart.CFrame = NPC.PrimaryPart.CFrame - NPC.PrimaryPart.CFrame.LookVector * 4
        end)
     else
        if Loop ~= nil then Loop:Disconnect() end
     end
end)]]

Section3:NewButton("TP to Player", "Tp to Player bro", function()
    local NPC = workspace.Living:FindFirstChild(TempData.AutofarmSettings.SelectedNPC)
    local Character = Player.Character
    if not NPC or not Character then return end
    
    game.Players.LocalPlayer.Character.PrimaryPart.CFrame = NPC.PrimaryPart.CFrame - NPC.PrimaryPart.CFrame.LookVector * 1
end)
        
local Loop = nil
Section3:NewToggle("Attach Yourself To NPC/Player", "the title the title", function(NewState)
    if NewState == true then
        
        local NPC = workspace.Living:FindFirstChild(TempData.AutofarmSettings.SelectedNPC)
        local Character = Player.Character
        if not NPC or not Character then return end
        
        Loop = game:GetService("RunService").RenderStepped:Connect(function()
            game.Players.LocalPlayer.Character.PrimaryPart.CFrame = NPC.PrimaryPart.CFrame - NPC.PrimaryPart.CFrame.LookVector * 4
        end)
     else
        if Loop ~= nil then Loop:Disconnect() end
     end
end)

Section3:NewToggle("Anchor NPC", "locks the npc in once place", function(NewState)
_G.Anchor = NewState
    while _G.Anchor == true do wait()
    local NPC = workspace.Living:FindFirstChild(TempData.AutofarmSettings.SelectedNPC)
    local Character = Player.Character
    if not NPC or not Character then return end

    if NPC.PrimaryPart.Anchored == false then
        NPC.PrimaryPart.Anchored = true
            elseif _G.Anchor == false then
        NPC.PrimaryPart.Anchored = false
        end
    end
end)

local Loop3 = nil
Section3:NewToggle("Auto M1 (Left Click)", "auto m1", function(m11)
    if m11 == true then
        Loop3 = game:GetService("RunService").RenderStepped:Connect(function()
            game:GetService("Players").LocalPlayer.Character.StandEvents.M1:FireServer()
        end)
     else
        if Loop3 ~= nil then Loop3:Disconnect() end
     end
end)

local Loop4 = nil
Section3:NewToggle("Auto Barrage (E Key)", "auto barrage", function(barg)
if barg == true then
Loop4 = game:GetService("RunService").RenderStepped:Connect(function()
local args = {
    [1] = true
    }
    Player.Character.StandEvents.Barrage:FireServer(unpack(args))
        end)
     else
        if Loop4 ~= nil then Loop4:Disconnect() end
     end
end)

local Loop5 = nil
Section3:NewToggle("Auto Heavy (R Key)", "auto heavy", function(heav)
if heav == true then
    Loop5 = game:GetService("RunService").RenderStepped:Connect(function()
    Player.Character.StandEvents.Heavy:FireServer()
        end)
     else
        if Loop5 ~= nil then Loop5:Disconnect() end
     end
end)

local labelo = Section3:NewLabel("Items in the server:" ..tostring(#workspace.Items:GetChildren()))

workspace.Items.ChildAdded:Connect(function() 
    labelo:UpdateLabel("Items in the server:" ..tostring(#workspace.Items:GetChildren()))
end)

workspace.Items.ChildRemoved:Connect(function() 
    labelo:UpdateLabel("Items in the server:" ..tostring(#workspace.Items:GetChildren()))
end)

Section3:NewToggle("Itemfarm", "Toggle Itemfarm", function(sussy)
    getgenv().sussy = sussy
        while getgenv().sussy do wait()
            for i,v in pairs(game.Workspace.Items:GetChildren()) do
                if v:IsA("Tool") then
                    pcall( function()
                    v.Handle.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                    for i,v in pairs(game.Players.LocalPlayer.Backpack:GetDescendants()) do if (v.ClassName == "MeshPart" or v.Name == "Handle") and v.Anchored == true and v.Parent.ClassName == "Tool" then v.Anchored = false end end
                    game.Players.LocalPlayer.Character.Humanoid:UnequipTools()
                    if v == nil then
                    game.Players.LocalPlayer.Character.Humanoid.Jump = true
                    end
                end)
            end
        end
    end
end)

Section2:NewButton("Use Roka", "Uses Roka innit", function()
    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and game.Players.LocalPlayer.Backpack:FindFirstChild("Rokakaka") then
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Rokakaka"))
        game.Players.LocalPlayer.Character:FindFirstChild("Rokakaka").Use:FireServer()
    end
end)

Section2:NewButton("Use Stand Arrow", "uses stand arrow", function()
    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and game.Players.LocalPlayer.Backpack:FindFirstChild("Stand Arrow") then
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Stand Arrow"))
        game.Players.LocalPlayer.Character:FindFirstChild("Stand Arrow").Use:FireServer()
    end
end)

Section2:NewButton("Use Charged Arrow", "",function()
    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and game.Players.LocalPlayer.Backpack:FindFirstChild("Charged Arrow") then
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Charged Arrow"))
        game.Players.LocalPlayer.Character:FindFirstChild("Charged Arrow").Use:FireServer()
    end
end)

Section2:NewButton("Use Roka & Stand Arrow", "", function()
    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and game.Players.LocalPlayer.Backpack:FindFirstChild("Rokakaka") then
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Rokakaka"))
        game.Players.LocalPlayer.Character:FindFirstChild("Rokakaka").Use:FireServer()
        wait(1)
        if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and game.Players.LocalPlayer.Backpack:FindFirstChild("Stand Arrow") then
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Stand Arrow"))
        game.Players.LocalPlayer.Character:FindFirstChild("Stand Arrow").Use:FireServer()
    end
    end
end)

Section2:NewButton("Use Roka & Charged Arrow", "", function()
    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and game.Players.LocalPlayer.Backpack:FindFirstChild("Rokakaka") then
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Rokakaka"))
        game.Players.LocalPlayer.Character:FindFirstChild("Rokakaka").Use:FireServer()
        wait(1)
        if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and game.Players.LocalPlayer.Backpack:FindFirstChild("Charged Arrow") then
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Charged Arrow"))
        game.Players.LocalPlayer.Character:FindFirstChild("Charged Arrow").Use:FireServer()
    end
    end
end)

local players = {}
for i,v in pairs(game.Players:GetChildren()) do
    table.insert(players,v.Name)
end

Section4:NewDropdown("Select Player To Check:", "select players to check",players, function(currentOption)
if currentOption == currentOption then
   local Arrow = 0
   local requiem = 0
   local Dio = 0
   local Unusual = 0
   local Ketchup = 0
   local Rokakaka = 0
   local Ultimate = 0
   local Cursed = 0
   local Coprse = 0
   local torso = 0
   local skull = 0
   local chargedarrow = 0
   for _,v in pairs(game:GetService("Players")[currentOption].Backpack:GetChildren()) do
      if v.Name == "Stand Arrow" then
         Arrow =  Arrow  + 1
      elseif v.Name == "Requiem Arrow" then
         requiem =  requiem  + 1
      elseif v.Name == "Dio's Diary" then
         Dio =  Dio  + 1
      elseif v.Name == "Unusual Arrow" then
         Unusual = Unusual + 1
      elseif v.Name == "Ketchup" then
         Ketchup = Ketchup + 1
      elseif v.Name == "Rokakaka" then
         Rokakaka = Rokakaka + 1
      elseif v.Name == "Ultimate Diary" then
         Ultimate = Ultimate + 1
      elseif v.Name == "Cursed Orb" then
         Cursed = Cursed + 1
      elseif v.Name == "Saint's Limb" then
         Coprse = Coprse + 1
      elseif v.Name == "Saint's Torso" then
         torso = torso + 1
      elseif v.Name == "Saint's Skull" then
         skull = skull + 1
      elseif v.Name == "Charged Arrow" then
         chargedarrow = chargedarrow + 1
      end
   end


   local N = 0
   for i,v in pairs(game:GetService("Players")[currentOption].Backpack:GetChildren()) do
      if v:IsA("Tool") then
         N = N + 1
      end
   end

   local A = 0
   for i,v in pairs(game:GetService("Players"):GetChildren()) do
      if v.ClassName == "Player" then
         A = A + 1
      end
   end


   local data = {
      "[+] Welcome To Player Backpack Checker Notification!",

            "\nPlayer Backpack Alert | Vezzy's Script Hub",
            "\n-Username: " .. game.Players[currentOption].Name  ..
            "\n-Equipped Stand: " .. game:GetService("Players")[currentOption].Data.Stand.Value .." ".. game:GetService("Players")[currentOption].Data.Attri.Value ..
            "\n-Stand Storage 1: ".. game:GetService("Players")[currentOption].Data.Slot1Stand.Value .." ".. game:GetService("Players")[currentOption].Data.Slot1Attri.Value ..
            "\n-Stand Storage 2: ".. game:GetService("Players")[currentOption].Data.Slot2Stand.Value .." ".. game:GetService("Players")[currentOption].Data.Slot2Attri.Value ..
            "\n-Stand Storage 3: ".. game:GetService("Players")[currentOption].Data.Slot3Stand.Value .." ".. game:GetService("Players")[currentOption].Data.Slot3Attri.Value ..
            "\n-------------"..
            "\n-Level: " .. game:GetService("Players")[currentOption].Data.Level.Value  ..
            "\n-Current Players Killed: " .. game:GetService("Players")[currentOption].Data.PlayerKills.Value ..
            "\n-Secondary: " .. game:GetService("Players")[currentOption].Data.Spec.Value .. "\n" ..
            "-Current Players In Server: "  .. A  ..
            "\n-Money: " .. game:GetService("Players")[currentOption].Data.Cash.Value ..
            "\n-------------"..
            "\n-Charged Arrow: ".. chargedarrow ..
            "\n-Rokakaka: ".. Rokakaka ..
            "\n-Dio's Diary: " .. Dio ..
            "\n-Requiem Arrow: " .. requiem ..
            "\n-Ketchup: ".. Ketchup ..
            "\n-ULT Diary: "..Ultimate..
            "\n-Cursed Orb: "..Cursed..
            "\n-Saint's Limb: "..Coprse..
            "\n-Saint's Torso: "..torso..
            "\n-Saint's Skull: "..skull..
            "\n-Total Items: "  .. N  .. "\n" ..
            "-Items until full: " .. 500-N .."\n"..
            "\n-Current "  .. game:GetService("Players").LocalPlayer.PlayerGui.PlayerGUI.ingame.Stats.ST.Text  .. "",

         }
      
   local newdata = game:GetService("HttpService"):JSONEncode(data)

   local headers = {
      ["content-type"] = "application/json"
   }
   request = http_request or request or HttpPost or syn.request
   local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}

   rconsoleclear()
   for i, v in pairs(data) do
       
    rconsoleprint(v)
end
end
end)
