local Name = game:GetService("Players").LocalPlayer.Name
local Player = game:GetService("Players").LocalPlayer

local TempData = {
            ["WalkSpeed"] = 10,
            ["JumpPower"] = 50
}

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

local Window = Library.CreateLib("Universal Fun (R15) Vez#9707 - https://discord.gg/SzTRYkBu8u", colors)
local Tab = Window:NewTab("main")
local Tab3 = Window:NewTab("other")

local Section = Tab:NewSection("just some character shit")
local Section3 = Tab3:NewSection("other shit")

Section:NewToggle("Enable WalkSpeed (Server)", "gay", function(WS)
    getgenv().WS = WS
        if getgenv().WS then
            someloop = game:GetService("RunService").RenderStepped:Connect(function()
			    if Player.Character and Player.Character:FindFirstChild("Humanoid") then
			        Player.Character.Humanoid.WalkSpeed = TempData["WalkSpeed"]
			    end
		    end)
	    else
	        spawn( function()
	            Player.Character.Humanoid.WalkSpeed = 16
            end)
	    someloop:Disconnect()
	end
end)

Section:NewSlider("WalkSpeed (Server)", "WS", 700, 50, function(WS) -- 500 (MaxValue) | 0 (MinValue)
    TempData["WalkSpeed"] = WS
end)

Section:NewToggle("Enable JumpPower (Server)", "gay", function(JP)
    getgenv().JP = JP
        if getgenv().JP then
            someloop = game:GetService("RunService").RenderStepped:Connect(function()
			    if Player.Character and Player.Character:FindFirstChild("Humanoid") then
			        Player.Character.Humanoid.JumpPower = TempData["JumpPower"]
			    end
		    end)
	    else
	        spawn( function()
	            Player.Character.Humanoid.JumpPower = 50
            end)
	    someloop:Disconnect()
	end
end)

Section:NewSlider("Jump (Server)", "jumpy", 700, 50, function(JP) -- 500 (MaxValue) | 0 (MinValue)
    TempData["JumpPower"] = JP
end)

Section:NewSlider("Hip Height (Server)", "hip", 100, 0, function(HH) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.HipHeight = HH
end)

local e = Instance.new('Part', workspace)
Section:NewToggle("Toggle Fly (Server)", "Space to go up, LeftControl to go down.", function(fly)
e.Anchored = true
e.Transparency = 1
e.CanCollide = true
    while fly == true do wait()
        e.CFrame = game.Players.LocalPlayer.Character["LeftFoot"].CFrame + Vector3.new(-0.5,-0.825,0)
    end
    if fly == false then
    e.CanCollide = false
    e.Transparency = 1
    end
end)
local Holder = nil 

Section:NewLabel("some fun stuff")

Section:NewToggle("Tower Builder (Client)", "5 star hotel tower", function(strs)
    _G.strs = strs
    while _G.strs == true do task.wait()
    local Stairs = 3
    local DistPerStep = 2
    local HeightPerStep = 1
    Holder = (Holder ~= nil and Holder or Instance.new('Folder', workspace))
    for i = 0, Stairs do
    local FrontPart = Instance.new('Part', Holder)
    FrontPart.Size = Vector3.new(4,2,4)
    local RightPart = Instance.new('Part', Holder)
    RightPart.Size = Vector3.new(4,2,4)
    local LeftPart = Instance.new('Part', Holder)
    LeftPart.Size = Vector3.new(4,2,4)
    local BackPart = Instance.new('Part', Holder)
    BackPart.Size = Vector3.new(4,2,4)
    FrontPart.Anchored = true RightPart.Anchored = true LeftPart.Anchored = true BackPart.Anchored = true
    FrontPart.CFrame = game.Players.LocalPlayer.Character.LeftFoot.CFrame + (game.Players.LocalPlayer.Character.LeftFoot.CFrame.LookVector * (i*DistPerStep)) + Vector3.new(0, i*HeightPerStep, 0)
    RightPart.CFrame = game.Players.LocalPlayer.Character.LeftFoot.CFrame + (game.Players.LocalPlayer.Character.LeftFoot.CFrame.RightVector * (i*DistPerStep)) + Vector3.new(0, i*HeightPerStep, 0)
    BackPart.CFrame = game.Players.LocalPlayer.Character.LeftFoot.CFrame - (game.Players.LocalPlayer.Character.LeftFoot.CFrame.LookVector * (i*DistPerStep)) + Vector3.new(0, i*HeightPerStep, 0)
    LeftPart.CFrame = game.Players.LocalPlayer.Character.LeftFoot.CFrame - (game.Players.LocalPlayer.Character.LeftFoot.CFrame.RightVector* (i*DistPerStep)) + Vector3.new(0, i*HeightPerStep, 0)
    end
end
end)

Section:NewButton("Destroy Tower", "Destroys stairs", function()
    if Holder ~= nil then Holder:Destroy() Holder = nil end 
end)

Section:NewButton("Penis Builder (Client)", "builds a penis", function()
    local ABCDE = Instance.new('Folder', workspace)
    ABCDE.Name = "Gaypenis"
    local f = Instance.new('Part', ABCDE)
    local g = Instance.new('Part', ABCDE)
    f.Anchored = true
    f.Size = Vector3.new(5,1,2)
    g.Anchored = true
    g.Size = Vector3.new(2,15,2)
    f.CFrame = game.Players.LocalPlayer.Character["LeftFoot"].CFrame + Vector3.new(0,0,0)
    g.CFrame = f.CFrame + Vector3.new(0,7.5,0)
end)

Section:NewButton("Destroy Penis", "Destroys Penis", function()
    for i,v in pairs(game.Workspace:GetChildren()) do
        if v.Name == "Gaypenis" then
        v:Destroy()
        end
    end
end)

local Holder2 = nil
Section:NewButton("Create Stairs (Client)", "creates stairs", function()
    local Stairs = 10
    local DistPerStep = 2
    local HeightPerStep = 1
    Holder2 = (Holder2 ~= nil and Holder2 or Instance.new('Folder', workspace))
    for i = 0, Stairs do
    local Part = Instance.new('Part', Holder2)
    Part.Size = Vector3.new(7,1,2)
    local RailLeft = Instance.new('Part', Holder2)
    RailLeft.Size = Vector3.new(2,2,2)
    local RailRight = Instance.new('Part', Holder2)
    RailRight.Size = Vector3.new(2,2,2)
    Part.Anchored = true RailLeft.Anchored = true RailRight.Anchored = true 
    Part.CFrame = game.Players.LocalPlayer.Character.LeftFoot.CFrame + (game.Players.LocalPlayer.Character.LeftFoot.CFrame.LookVector * (i*DistPerStep)) + Vector3.new(0, i*HeightPerStep, 0)
    RailLeft.CFrame = game.Players.LocalPlayer.Character.LeftFoot.CFrame + (game.Players.LocalPlayer.Character.LeftFoot.CFrame.LookVector * (i*DistPerStep)) + Vector3.new(0, i*HeightPerStep, 0) - (game.Players.LocalPlayer.Character.LeftFoot.CFrame.RightVector * Part.Size.X / 2) + Vector3.new(0, Part.Size.Y, 0)
    RailRight.CFrame = game.Players.LocalPlayer.Character.LeftFoot.CFrame + (game.Players.LocalPlayer.Character.LeftFoot.CFrame.LookVector * (i*DistPerStep)) + Vector3.new(0, i*HeightPerStep, 0) + (game.Players.LocalPlayer.Character.LeftFoot.CFrame.RightVector * Part.Size.X / 2) + Vector3.new(0, Part.Size.Y, 0)
    end
end)

Section:NewButton("Destroy Stairs", "Destroys stairs", function()
    if Holder2 ~= nil then Holder2:Destroy() Holder2 = nil end 
end)

local Holder3 = nil
Section:NewButton("Create Bridge (Client)", "creates bridge", function()
    local Stairs = 10
    local DistPerStep = 2
    local HeightPerStep = 0
    Holder3 = (Holder3 ~= nil and Holder3 or Instance.new('Folder', workspace))
    for i = 0, Stairs do
    local Part = Instance.new('Part', Holder3)
    Part.Size = Vector3.new(7,1,2)
    local RailLeft = Instance.new('Part', Holder3)
    RailLeft.Size = Vector3.new(2,2,2)
    local RailRight = Instance.new('Part', Holder3)
    RailRight.Size = Vector3.new(2,2,2)
    Part.Anchored = true RailLeft.Anchored = true RailRight.Anchored = true 
    Part.CFrame = game.Players.LocalPlayer.Character.Head.CFrame + (game.Players.LocalPlayer.Character.Head.CFrame.LookVector * (i*DistPerStep)) + Vector3.new(0, i*HeightPerStep, 0)
    RailLeft.CFrame = game.Players.LocalPlayer.Character.Head.CFrame + (game.Players.LocalPlayer.Character.Head.CFrame.LookVector * (i*DistPerStep)) + Vector3.new(0, i*HeightPerStep, 0) - (game.Players.LocalPlayer.Character.LeftFoot.CFrame.RightVector * Part.Size.X / 2) + Vector3.new(0, Part.Size.Y, 0)
    RailRight.CFrame = game.Players.LocalPlayer.Character.Head.CFrame + (game.Players.LocalPlayer.Character.Head.CFrame.LookVector * (i*DistPerStep)) + Vector3.new(0, i*HeightPerStep, 0) + (game.Players.LocalPlayer.Character.LeftFoot.CFrame.RightVector * Part.Size.X / 2) + Vector3.new(0, Part.Size.Y, 0)
    end
end)

Section:NewButton("Destroy Bridge", "Destroys stairs", function()
    if Holder3 ~= nil then Holder3:Destroy() Holder3 = nil end 
end)


Section:NewButton("Create Baseplate House (Client)", "creates old baseplate house", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Vezise/vezzyscripts/main/housescript"))()
end)

Section:NewButton("Destroy Baseplate House", "Destroys yes", function()
    for i,v in pairs(workspace:GetDescendants()) do
        if v:IsA("Model") and v.Name == "Housexyzxyzxyz" then
            v:Destroy()
        end
    end
end)

Section:NewButton("Create Twin Towers (Client)", "creates the Twin Towers", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Vezise/vezzyscripts/main/thewtc"))()
    Instance.new('SurfaceLight', workspace.WTC.WorldTrade)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.WTC.WorldTrade.CFrame
    game:GetService("TweenService"):Create(workspace.WTC.PlaneMesh, TweenInfo.new(15), {Position = workspace.WTC.WorldTrade.Position}):Play()
    task.wait(6)
    for i = 1, 1000 do
        local Explosion = Instance.new('Explosion', workspace.WTC.WorldTrade)
        local Fire = Instance.new('Fire', workspace.WTC.WorldTrade)
        Fire.Size = 30
        Fire.Heat = 25
        Explosion.BlastPressure = math.huge
        Explosion.BlastRadius = math.huge
        Explosion.Position = workspace.WTC.WorldTrade.Position
    end
end)

Section:NewButton("Destroy Twin Towers", "Destroys yes", function()
    for i,v in pairs(workspace:GetDescendants()) do
        if v:IsA("Model") and v.Name == "WTC" then
            v:Destroy()
        end
    end
end)

Section:NewButton("Create Road Pack (Client)", "creates a small road pack", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Vezise/vezzyscripts/main/someroadshit"))()
end)

Section:NewButton("Destroy Road Pack", "Destroys yes", function()
    for i,v in pairs(workspace:GetDescendants()) do
        if v:IsA("Model") and v.Name == "RoadsBro" then
            v:Destroy()
        end
    end
end)

Section:NewButton("Car Crash Scene", "what the ffuck", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Vezise/vezzyscripts/main/carcrash"))()
end)
