repeat task.wait() until game.Players.LocalPlayer

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua", true))()

local Window = Library.CreateLib("Roblox Is Breakable", "DarkTheme")
local Tab = Window:NewTab("Player")
local Tab2 = Window:NewTab("NPC & Player")
local Tab3 = Window:NewTab("Misc")
local Tab4 = Window:NewTab("Teleports")
local Tab5 = Window:NewTab("Items")
local Tab6 = Window:NewTab("Other")
local A = Tab:NewSection("Player")
local B = Tab:NewSection("Fly")
local C = Tab:NewSection("More Player")
local D = Tab2:NewSection("NPC")
local E = Tab2:NewSection("Settings")
local F = Tab2:NewSection("Player")
local G = Tab3:NewSection("Misc")
local TP = Tab4:NewSection("Teleports")
local Items = Tab5:NewSection("Items")
local H = Tab6:NewSection("Other")
local Player = game.Players.LocalPlayer

setfpscap(999999)

Tables = {
    Hostile = {"Zombie","Thug","Brute","Dio Brando","Brawler","Graveyard Zombie","Dio Brando (Teen)","Bruford"}
}

Settings = {
    FlySpeed = 5,
    Selected = "",
    Distance = 4,
    Height = 0,
    WalkSpeed = 16,
    JumpPower = 50,
    Speed = false,
    Jump = false
}

A:NewButton("Reset Player", "", function(t)
    Player.Character.Humanoid.Health = 0    
end)

A:NewSlider("Speed", "", 385,16, function(t)
    Settings.WalkSpeed = t
end)

A:NewToggle("Toggle Speed", "", function(t)
    Settings.Speed = t
    repeat task.wait()
        Player.Character.Humanoid.WalkSpeed = Settings.WalkSpeed
    until Settings.Speed ~= true
    Player.Character.Humanoid.WalkSpeed = 16
end)

A:NewSlider("Jump", "", 450,50, function(t)
    Settings.JumpPower = t
end)

A:NewToggle("Toggle Jump", "", function(t)
    Settings.Jump = t
    repeat task.wait()
        Player.Character.Humanoid.JumpPower = Settings.JumpPower
    until Settings.Jump ~= true
    Player.Character.Humanoid.JumpPower = 50
end)

A:NewSlider("Hip Height", "", 40,0, function(t)
    Player.Character.Humanoid.HipHeight = t
end)

A:NewButton("Reset Hip Height", "", function()
    Player.Character.Humanoid.HipHeight = 2.18
end)

A:NewSlider("Gravity", "", 300,0, function(t)
    workspace.Gravity = t
end)

A:NewButton("Reset Gravity", "", function(t)
    workspace.Gravity = 196.2
end)

-- credits to Enxquity for fly
B:NewToggle("Fly", "q = down, e = up, wasd = move", function(t)
    if t == true then
        local Keys_Pressed = {
        	["Q"] = 0;
        	["E"] = 0;
        	["W"] = 0;
        	["A"] = 0;
        	["S"] = 0;
        	["D"] = 0;
        }
        local Key_Info = {
        	["Q"] = {
        		["Operator"] = "-";
        		["Direction"] = "UpVector";
        	};
        	["E"] = {
        		["Operator"] = "+";
        		["Direction"] = "UpVector";
        	};
        	["W"] = {
        		["Operator"] = "+";
        		["Direction"] = "LookVector";
        	};
        	["A"] = {
        		["Operator"] = "-";
        		["Direction"] = "RightVector";
        	};
        	["S"] = {
        		["Operator"] = "-";
        		["Direction"] = "LookVector";
        	};
        	["D"] = {
        		["Operator"] = "+";
        		["Direction"] = "RightVector";
        	};
        }
        
        
        --// Begin fly script
        
        --// Variables
        local Players = game:GetService("Players")
        local UIS = game:GetService("UserInputService")
        local RunService = game:GetService("RunService")
        local TweenService = game:GetService("TweenService")
        
        --// Neat functions
        local function GetKeyFromEnum(enum)
        	return enum.KeyCode.Name
        end
        
        local function GetMass(Model)
        	local Mass = 0;
        	for i,v in pairs(Model:GetDescendants()) do
        		if v:IsA("BasePart") then Mass += v:GetMass() end
        	end
        	return Mass;
        end
        
        local function Math(Operator, A, B)
        	if Operator == "-" then return A-B elseif Operator == "+" then return A+B end
        end
        
        --// Key detection
        UIS.InputBegan:Connect(function(Key, Typing)
        	if Typing then return end
        	
        	local Key_String = GetKeyFromEnum(Key)
        	if Keys_Pressed[Key_String] then
        		Keys_Pressed[Key_String] = 1
        	end
        end)
        
        UIS.InputEnded:Connect(function(Key, Typing)
        	if Typing then return end
        	
        	local Key_String = GetKeyFromEnum(Key)
        	if Keys_Pressed[Key_String] then
        		Keys_Pressed[Key_String] = 0
        	end
        end)
        
        --// Fly loop
        
        _G.FlyLoop = RunService.RenderStepped:Connect(function()
        	local Character = Player.Character
        	if not Character then return end
        	Character.Humanoid.WalkSpeed = 0; Character.Humanoid.JumpPower = 0;
        	
        	Character.PrimaryPart.CFrame = CFrame.new(Character.PrimaryPart.Position, Character.PrimaryPart.Position + workspace.CurrentCamera.CFrame.LookVector)
        	local CharacterMass = GetMass(Character)
        	--// Calculate new velocity
        	
            local Velocity = Vector3.new(0, CharacterMass/workspace.Gravity, 0) --// Lets try not to decend
            for i,v in pairs(Keys_Pressed) do
                if v == 0 then else
                Velocity = Math(Key_Info[i].Operator, Velocity, Character.PrimaryPart.CFrame[Key_Info[i].Direction] * Settings.FlySpeed * CharacterMass) end
            end
        	
        	Character.PrimaryPart.Velocity = Velocity
        end)
    else
        _G.FlyLoop:Disconnect()
        Player.Character.Humanoid.WalkSpeed = 16
    end
end)

B:NewSlider("Fly Speed", "", 10,1, function(t)
    Settings.FlySpeed = t
end)

B:NewSlider("Super Fly Speed", "", 99999,999, function(t)
    Settings.FlySpeed = t
end)

C:NewButton("Heal (Cost: $50)", "", function(t)
    workspace.NPCs.Friendly.Denqa.Scripts.QuestHandler.UpdateEvent:FireServer()
end)

local ESP = loadstring(game:HttpGet("https://pastebin.com/raw/1KPn58Z3"))()

D:NewDropdown("Choose NPC", "", Tables.Hostile, function(t)
    Settings.Selected = t
    print(Settings.Selected)
end)

D:NewButton("TP to NPC", "Teleports you to the NPC", function()
    for i,v in pairs(workspace.NPCs.Hostile:GetChildren()) do
        if v.Name == Settings.Selected and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health >= 0 then
            Player.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame
        end
    end
end)

D:NewToggle("Attack NPC", "Attaches you to the NPC", function(t)
    getgenv().Attach = t
    pcall(function()
        for i,v in pairs(workspace.NPCs.Hostile:GetChildren()) do
            if v.Name == Settings.Selected and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health >= 0 then
                repeat task.wait()
                    game:GetService("Players").LocalPlayer.Backpack.Events.HotkeyEvent:FireServer("Light Punch", true, false)
                    game:GetService("Players").LocalPlayer.Backpack.Events.HotkeyEvent:FireServer("Kick", true, false)
                    game:GetService("Players").LocalPlayer.Backpack.Events.HotkeyEvent:FireServer("Light Punch Stand", true, false)
                    game:GetService("Players").LocalPlayer.Backpack.Events.HotkeyEvent:FireServer("Heavy Punch", true, false) 
                    game:GetService("Players").LocalPlayer.Backpack.Events.HotkeyEvent:FireServer("Stand Kick", true, false)
                    Player.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame - v.HumanoidRootPart.CFrame.LookVector * Settings.Distance + Vector3.new(0,Settings.Height,0)
                until getgenv().Attach ~= true or v.Humanoid.Health <= 0
            end
        end
    end)
end)

E:NewSlider("Distance from Target", "", 50,0, function(t)
    Settings.Distance = t
end)

E:NewSlider("Height from Target", "", 25,0, function(t)
    Settings.Height = t
end)

function SearchPlayer(Name)
    local ClosestMatch = nil
    local ClosestLetters = 0
    for i,v in pairs(game.Players:GetPlayers()) do
        local matched_letters = 0
        for i = 1, #Name do
            if string.sub(Name:lower(), 1, i) == string.sub(v.Name:lower(), 1, i) then
                matched_letters = i
            end
        end
        if matched_letters > ClosestLetters then
            ClosestLetters = matched_letters
            ClosestMatch = v
        end
    end
    return ClosestMatch
end

local TextB;
TextB = F:NewTextBox("Select Player", "dont need full name", function(text)
    pcall(function()
        local PossiblePlayer = SearchPlayer(text)
      
        if PossiblePlayer then
            Settings.Selected = PossiblePlayer.Name
            TextB:Update(PossiblePlayer.Name)
        end
    end)
end)

F:NewButton("TP to Player", "Teleports you to the Player", function()
    for i,v in pairs(workspace:GetChildren()) do
        if v.Name == Settings.Selected and v:FindFirstChild("HumanoidRootPart") then
            Player.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame
        end
    end
end)

F:NewToggle("Attack Player", "Attaches you to the Player", function(t)
    getgenv().Attach = t
    pcall(function()
        for i,v in pairs(workspace:GetChildren()) do
            if v.Name == Settings.Selected and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health >= 0 then
                repeat task.wait()
                    game:GetService("Players").LocalPlayer.Backpack.Events.HotkeyEvent:FireServer("Light Punch", true, false)
                    game:GetService("Players").LocalPlayer.Backpack.Events.HotkeyEvent:FireServer("Kick", true, false)
                    game:GetService("Players").LocalPlayer.Backpack.Events.HotkeyEvent:FireServer("Light Punch Stand", true, false)
                    game:GetService("Players").LocalPlayer.Backpack.Events.HotkeyEvent:FireServer("Heavy Punch", true, false) 
                    game:GetService("Players").LocalPlayer.Backpack.Events.HotkeyEvent:FireServer("Stand Kick", true, false)
                    Player.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame - v.HumanoidRootPart.CFrame.LookVector * Settings.Distance + Vector3.new(0,Settings.Height,0)
                until getgenv().Attach ~= true
            end
        end
    end)
end)

F:NewToggle("Player Box ESP", "esp players", function(t)
    if t then
        ESP:DrawBoxPlayers()
    else
        ESP:CleanUp()
    end
end)


F:NewToggle("Player Skeleton ESP", "esp players", function(t)
    if t then
        ESP:DrawSkeletonPlayers()
    else
        ESP:CleanUp()
    end
end)

local num = 0
local function ballsack(i)
    if i.Name == 'Border' then
        num = num + 1
        i.Name = 'Border '..num
    end
end
        
for i,v in pairs(workspace.Map.Borders:GetChildren()) do
    ballsack(v)
end

G:NewToggle("Auto Travel-Challenge", "", function(t)
    ATC = t
    if ATC then
        Player.Character.HumanoidRootPart.CFrame = workspace.Map.Borders["Border 20"].CFrame + Vector3.new(0,10,0)
        workspace.Map.Borders["Border 20"].CanCollide = true
        workspace.Map.Borders["Border 20"].Transparency = 0.76
        workspace.Map.Borders["Border 20"].Size = Vector3.new(2048,1,2048)
        
        local A = Instance.new("Part", workspace)
        local B = Instance.new("Part", workspace)
        A.Anchored = true
        A.CFrame = Player.Character.HumanoidRootPart.CFrame + Vector3.new(100,0,0)
        B.Anchored = true
        B.Size = Vector3.new(12,1,12)
        
        Player.Character.Humanoid.WalkSpeed = 1200
        while ATC do
            Player.Character.HumanoidRootPart.CFrame = workspace.Map.Borders["Border 20"].CFrame + Vector3.new(0,400,0)
            B.CFrame = Player.Character.HumanoidRootPart.CFrame + Vector3.new(0,-2.18,0)
            Player.Character.Humanoid.WalkToPoint = workspace.Map.Borders["Border 3"].Position
            task.wait(2)
        end
    else
        Player.Character.Humanoid.Health = 0
    end
end)

TP:NewButton("TP to Default Spawn", "", function()
    Player.Character.HumanoidRootPart.CFrame = CFrame.new(740, 25, 3850)
end)

TP:NewButton("TP to Joestar Mansion", "", function()
    Player.Character.HumanoidRootPart.CFrame = CFrame.new(763, 25, 4545)
end)

TP:NewButton("TP to London", "", function()
    Player.Character.HumanoidRootPart.CFrame = CFrame.new(1846, 31, 3023)
end)

TP:NewButton("TP to Dio's Castle", "", function()
    Player.Character.HumanoidRootPart.CFrame = CFrame.new(-981, 263, -334)
end)

TP:NewButton("TP to Windknights Lot", "", function()
    Player.Character.HumanoidRootPart.CFrame = CFrame.new(-537, 40, 1102)
end)

TP:NewButton("TP to The Graveyard", "", function()
    Player.Character.HumanoidRootPart.CFrame = CFrame.new(-86, 39, 84)
end)

TP:NewButton("TP to Whitesnake", "", function()
    Player.Character.HumanoidRootPart.CFrame = CFrame.new(-468, 39, 1063)
end)

Items:NewToggle("Safe Item Collect", "", function(t)
    getgenv().Safe = t
    pcall(function()
        while getgenv().Safe == true do task.wait()
            Player.Character.Humanoid.Health = 0
        end
    end)
end)

Items:NewButton("Item Collect", "", function()
    Its = workspace.Map.Items.SpawnedItems:GetDescendants()
    pcall(function()
        for i,v in pairs(Its) do
            if v:IsA("MeshPart") or v.Name == "Handle" and v:FindFirstChild("ProximityPrompt") and v ~= nil then
                Player.Character.HumanoidRootPart.CFrame = v.CFrame
                task.wait(0.2)
                fireproximityprompt(v.ProximityPrompt)
                task.wait(0.2)
            end
        end
    end)
end)

Items:NewButton("Dropped Item Collect", "", function()
    Its = workspace:GetChildren()
    pcall(function()
        for i,v in pairs(Its) do
            if v:IsA("MeshPart") and v:FindFirstChild("ProximityPrompt") and v ~= nil then
                Player.Character.HumanoidRootPart.CFrame = v.CFrame
                fireproximityprompt(v.ProximityPrompt)
            end
        end
    end)
end)

local Money = 1

Items:NewButton("Drop Money", "", function()
    game:GetService("ReplicatedStorage").Events.ItemDropEvent:FireServer(game:GetService("Players").LocalPlayer.Character, "Cash", "Cash", Money)
end)

Items:NewToggle("Drop Money Spam", "", function(t)
    getgenv().Drop = t
    repeat task.wait()
        game:GetService("ReplicatedStorage").Events.ItemDropEvent:FireServer(game:GetService("Players").LocalPlayer.Character, "Cash", "Cash", Money)
    until getgenv().Drop ~= true
end)

Items:NewSlider("Money Amount", "", 1000, 1, function(t)
    Money = t
end)

local ESP2 = loadstring(game:HttpGet("https://pastebin.com/raw/1KPn58Z3"))()

Items:NewToggle("Item ESP", "", function(t)
    if t then
        for i,v in pairs(workspace.Map.Items.SpawnedItems:GetChildren()) do
            if v:IsA("Model") then
                ESP2:DrawBox(v)
            end
        end
    else
        ESP2:CleanUp()
    end
end)

H:NewToggle("Barrier No-Clip", "", function(t)
    if t then
        for i,v in pairs(workspace.Map.Borders:GetChildren()) do
            if v:IsA("Part") then
                v.CanCollide = false
            end
        end
    else
        for i,v in pairs(workspace.Map.Borders:GetChildren()) do
            if v:IsA("Part") then
                v.CanCollide = true
            end
        end
    end
end)


--very scuffed noclip dont use i was lazy with this - vez
H:NewButton("No-Clip", "", function()
    spawn(function()
        for i,v in pairs(workspace.Map:GetDescendants()) do
            if v:IsA("BasePart") and not v:IsDescendantOf(workspace.Map.Locations.WindknightsLot.Port.Concrete)
            then
                v.Transparency = 0.5
                v.CanCollide = false
                game.Lighting.Brightness = 25
            end
        end
    end)
end)

H:NewButton("Disable No-Clip", "", function()
    for i,v in pairs(workspace.Map.Borders:GetChildren()) do
        if v:IsA("Part") then
            v.Transparency = 1
        end
    end
    oldpos = Player.Character.HumanoidRootPart.CFrame + Vector3.new(0,50,0)
    Player.Character.HumanoidRootPart.CFrame = CFrame.new(740, 25, 3850)
    task.wait(2.1)
    Player.Character.HumanoidRootPart.CFrame = CFrame.new(763, 25, 4545)
    task.wait(2.1)
    Player.Character.HumanoidRootPart.CFrame = CFrame.new(1846, 31, 3023)
    task.wait(2.1)
    Player.Character.HumanoidRootPart.CFrame = CFrame.new(-981, 263, -334)
    task.wait(2.1)
    Player.Character.HumanoidRootPart.CFrame = CFrame.new(-537, 40, 1102)
    task.wait(2.1)
    Player.Character.HumanoidRootPart.CFrame = CFrame.new(-86, 39, 84)
    task.wait(2.1)
    Player.Character.HumanoidRootPart.CFrame = CFrame.new(-468, 39, 1063)
    task.wait(2.1)
    Player.Character.HumanoidRootPart.CFrame = oldpos
end)

H:NewButton("Optimise Game", "", function()
    pcall(function()
        for i,v in pairs(workspace:GetDescendants()) do
            if v:IsA("BasePart") then
                v.Material = "SmoothPlastic"
            end
        end
        
        for i,v in pairs(game.ReplicatedStorage.VFX:GetDescendants()) do
            if v:IsA("ParticleEmitter") then
                v:Destroy()
            end
        end
    end)
end)

H:NewToggle("Turn up Brightness", "", function(t)
    if t then
        game.Lighting.Brightness = 10
        game.Lighting.ClockTime = 6.2
    else
        game.Lighting.Brightness = 3
        game.Lighting.ClockTime = 3.4
    end
end)
